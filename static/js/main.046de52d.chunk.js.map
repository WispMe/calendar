{"version":3,"sources":["components/Modal.js","components/Calendar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Modal","handleClose","show","children","showHideClassName","className","onClick","Calendar","state","days","dateObject","moment","allmonths","months","month","currentDay","todayMonth","title","time","startTime","endTime","invitation","eventCount","data","format","showEdit","editEvent","titleEdit","invitationEdit","timeEdit","startTimeEdit","endTimeEdit","addDisabled","firstDayOfMonth","startOf","daysInMonth","setMonth","e","setState","target","name","value","monthNo","indexOf","Object","assign","set","changeStartTime","changeEndTime","changeStartTimeEdit","changeEndTimeEdit","handleChange","handleDelete","sEvent","dataTemp","newData","map","dEvent","push","localStorage","setItem","JSON","stringify","handleFormSubmitEdit","setData","date","handleFormSubmit","preventDefault","showModal","d","hideModal","showModalEdit","hideModalEdit","parse","getItem","this","now","hour","minute","blanks","i","Number","style","fontSize","height","eventDay","blanksLast","totalSlots","rows","cells","forEach","row","length","daysinmonth","id","onChange","selected","width","textAlign","day","paddingLeft","onSubmit","type","placeholder","showSecond","defaultValue","substr","inputReadOnly","disabled","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.046de52d.chunk.js","sourcesContent":["\r\nconst Modal = ({ handleClose, show, children }) => {\r\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n  \r\n    return (\r\n      <div className={showHideClassName}>\r\n        <section className=\"modal-main\">\r\n          <span onClick={handleClose} className=\"close\">x</span>\r\n          {children}\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Modal","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport Modal from './Modal.js'\r\n\r\nimport 'rc-time-picker/assets/index.css';\r\nimport TimePicker from 'rc-time-picker';\r\n\r\nexport default class Calendar extends Component{\r\n    state = {\r\n        days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n        dateObject: moment(),\r\n        allmonths: moment.months(),\r\n        month: '',\r\n        currentDay: '',\r\n        todayMonth: '',\r\n        show: false,\r\n        title: '',\r\n        time: [],\r\n        startTime: '00:00',\r\n        endTime: '00:00',\r\n        invitation: '',\r\n        eventCount: 0,\r\n        data: [],\r\n        format: 'HH:mm',\r\n        showEdit: false,\r\n        editEvent: '',\r\n        titleEdit: '',\r\n        invitationEdit: '',\r\n        timeEdit: [],\r\n        startTimeEdit: '',\r\n        endTimeEdit: '',\r\n        addDisabled: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        const data = JSON.parse(localStorage.getItem('data'));\r\n        this.setState({\r\n            month: this.state.dateObject.format(\"MMMM\"),\r\n            todayMonth: this.state.dateObject.format(\"MMMM\")\r\n        })\r\n        if(localStorage.getItem('data')){\r\n            this.setState({\r\n                data\r\n            })\r\n        }\r\n    }\r\n\r\n    firstDayOfMonth = () => {\r\n        let dateObject = this.state.dateObject;\r\n        let firstDay = moment(dateObject)\r\n                     .startOf(\"month\")\r\n                     .format(\"d\"); \r\n       return firstDay;\r\n    };\r\n\r\n    daysInMonth = () => { \r\n            let dateObject = this.state.dateObject;\r\n            return moment(dateObject).daysInMonth()\r\n        }\r\n    \r\n    currentDay = () => {  \r\n        return this.state.dateObject.format(\"D\");\r\n    }\r\n\r\n    month = () => {\r\n        return this.state.dateObject.format(\"MMMM\");\r\n        };\r\n\r\n    setMonth = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () =>{\r\n            let monthNo = this.state.allmonths.indexOf(this.state.month);// get month number \r\n            let dateObject = Object.assign({}, this.state.dateObject);\r\n            dateObject = moment(dateObject).set(\"month\", monthNo); // change month value\r\n            this.setState({\r\n                dateObject: dateObject // add to state\r\n            });\r\n\r\n        })\r\n    };\r\n\r\n    \r\n    // Modal\r\n\r\n    changeStartTime = (value) => {\r\n        if(value === null){\r\n            this.setState({\r\n                startTime: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                startTime: value.format(this.state.format)\r\n            })\r\n        }\r\n    }\r\n\r\n    changeEndTime = (value) => {\r\n        if(value === null){\r\n            this.setState({\r\n                endTime: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                endTime: value.format(this.state.format)\r\n            })\r\n        }\r\n    }\r\n\r\n    changeStartTimeEdit = (value) => {\r\n        if(value === null){\r\n            this.setState({\r\n                startTimeEdit: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                startTimeEdit: value.format(this.state.format)\r\n            })\r\n        }\r\n    }\r\n\r\n    changeEndTimeEdit = (value) => {\r\n        if(value === null){\r\n            this.setState({\r\n                endTimeEdit: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                endTimeEdit: value.format(this.state.format)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDelete = (sEvent) => {\r\n        let dataTemp = this.state.data\r\n        let newData = []\r\n        dataTemp.map((dEvent) => {\r\n            if(dEvent === sEvent){\r\n                \r\n            }else{\r\n                newData.push(dEvent)\r\n            }\r\n            return newData\r\n        })\r\n        this.setState({\r\n            data: newData\r\n        }, () => {\r\n            localStorage.setItem('data',JSON.stringify(this.state.data));\r\n        })\r\n        \r\n    }\r\n\r\n    handleFormSubmitEdit = (sEvent) => {\r\n\r\n        let dataTemp = this.state.data\r\n        let newData = []\r\n\r\n        dataTemp.map((dEvent) => {\r\n            if(dEvent === sEvent){\r\n                const {titleEdit, invitationEdit, month, currentDay, startTimeEdit, endTimeEdit} = this.state\r\n\r\n                const setData = {\r\n                    date: `${currentDay} ${month}`,\r\n                    title: titleEdit,\r\n                    time: [startTimeEdit, endTimeEdit],\r\n                    invitation: invitationEdit\r\n                }\r\n\r\n                newData.push(setData)\r\n            }else{\r\n                newData.push(dEvent)\r\n            }\r\n            return newData\r\n        })\r\n        this.setState({\r\n            data: newData,\r\n            titleEdit: '',\r\n            invitationEdit: '',\r\n            startTimeEdit: '',\r\n            endTimeEdit: '',\r\n        }, () => {\r\n            localStorage.setItem('data',JSON.stringify(this.state.data));\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        const {title, invitation, month, currentDay, startTime, endTime} = this.state\r\n\r\n        const setData = {\r\n            date: `${currentDay} ${month}`,\r\n            title,\r\n            time: [startTime, endTime],\r\n            invitation\r\n        }\r\n        this.setState({\r\n            data: [...this.state.data, setData],\r\n            title: '',\r\n            time: '',\r\n            invitation: ''\r\n        }, () => {\r\n            localStorage.setItem('data',JSON.stringify(this.state.data));\r\n        })\r\n\r\n      };\r\n\r\n    showModal = (d) => {\r\n        this.setState({\r\n            show: true,\r\n            currentDay: d\r\n        });\r\n      };\r\n    \r\n      hideModal = () => {\r\n        this.setState({ show: false });\r\n      };\r\n\r\n      showModalEdit = (dEvent) =>{\r\n        this.setState({\r\n            showEdit: true,\r\n            titleEdit: dEvent.title,\r\n            invitationEdit: dEvent.invitation,\r\n            startTimeEdit: dEvent.time[0],\r\n            endTimeEdit: dEvent.time[1]\r\n        })\r\n      }\r\n\r\n      hideModalEdit = () => {\r\n        this.setState({ showEdit: false });\r\n      };\r\n    \r\n    render() {\r\n        const {days, allmonths, data, title, invitation} = this.state\r\n        const now = moment().hour(0).minute(0);\r\n        var eventCount = 0\r\n\r\n        let blanks = [];\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(\r\n                <td className=\"calendar-day empty\">{\"\"}</td>\r\n            );\r\n        }\r\n\r\n        let daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let currentDay = (d === Number(this.currentDay()) && this.state.todayMonth === this.month() ? \"today\" : \"\");   \r\n            daysInMonth.push(\r\n                <td key={d} className='calendar-day' onClick={() => this.showModal(d)}>\r\n                    <span className={currentDay} style={{fontSize: '12px'}}>{d}</span>\r\n                    <div className=\"d-flex flex-column\" style={{height: \"80%\"}}>\r\n                        {data.map((dEvent) => {\r\n                                let eventDay = ''\r\n                                if(dEvent.date === (`${d} ${this.state.month}`)){\r\n                                    eventDay = (\r\n                                        <div key={dEvent.title} className=\"eventDay\" style={{height: \"100%\"}}>\r\n                                            <p>{dEvent.title} ({dEvent.time[0]} - {dEvent.time[1]})</p>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                return eventDay\r\n                            })}\r\n                    </div>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        let blanksLast = [];\r\n        const totalDaysinCalendar = Number(this.firstDayOfMonth()) + Number(this.daysInMonth())\r\n        for (let i = totalDaysinCalendar; i < 42; i++) {\r\n            blanksLast.push(\r\n                <td className=\"calendar-day empty\">{\"\"}</td>\r\n            );\r\n        }\r\n\r\n        var totalSlots = [...blanks, ...daysInMonth, ...blanksLast];\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if (i % 7 !== 0) {\r\n              cells.push(row); // if index not equal 7 that means not go to next week\r\n            } else {\r\n              rows.push(cells); // when reach next week we contain all td in last week to rows \r\n              cells = []; // empty container \r\n              cells.push(row); // in current loop we still push current row to new container\r\n            }\r\n            if (i === totalSlots.length - 1) { // when end loop we add remain date\r\n              rows.push(cells);\r\n            }\r\n          });\r\n        \r\n        let daysinmonth = rows.map((d, i) => {\r\n            return <tr>{d}</tr>;\r\n          });\r\n        \r\n\r\n        return (\r\n            <section className=\"calendar\">\r\n                <div className=\"calendar-content d-flex justify-content-center align-items-center flex-column\">\r\n                    <h1 style={{fontSize: \"34px\"}}>Calendar 2021</h1>\r\n                    <div className=\"month\">\r\n                        <select name=\"month\" id=\"month\" onChange={this.setMonth}>\r\n                            {allmonths.map((month) =>{\r\n                                let selected = (month === this.month() ? \"selected\" : \"\")\r\n                                return(\r\n                                    <option value={month} key={month} selected={selected}>{month}</option>\r\n                                )\r\n                            } \r\n                            \r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                    <br/>\r\n                    <table className=\"table table-bordered\" style={{width: \"120%\"}}>\r\n                        <thead>\r\n                            <tr style={{textAlign: \"center\"}}>\r\n                                {days.map((day) => {\r\n                                    return(<th key={day} style={{width: \"200px\"}}>{day}</th>)\r\n                                })\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{daysinmonth}</tbody>\r\n                    </table>\r\n                </div> \r\n                <Modal show={this.state.show} handleClose={this.hideModal}>\r\n                    <div>\r\n                        <p className=\"dateModal\">{this.state.currentDay} {this.state.month}</p>\r\n                    </div>\r\n                    <div className=\"line\"></div>\r\n                    <div>\r\n                        <p className=\"titleModal\">Events</p>\r\n                        {data.map((dEvent, id) => {\r\n                            let eventDay = ''\r\n                            if(dEvent.date === (`${this.state.currentDay} ${this.state.month}`)){\r\n                                eventCount++\r\n                                eventDay = (\r\n                                    <div className=\"event\" key={id}>\r\n                                        <span onClick={() => this.showModalEdit(dEvent)} className=\"edit\">Edit</span>\r\n                                        <span onClick={() => this.handleDelete(dEvent)} className=\"delete\">x</span>\r\n                                        <p>{dEvent.title} ({dEvent.time[0]} - {dEvent.time[1]})</p>\r\n                                        <br/>\r\n                                        <div className=\"invitation\">\r\n                                            <p>Who:</p>\r\n                                            <ul>\r\n                                                <li style={{paddingLeft: \"20px\"}}>{dEvent.invitation}</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <Modal show={this.state.showEdit} handleClose={this.hideModalEdit}>\r\n                                            <div>\r\n                                                <p className=\"titleModal\">Edit Event</p>\r\n                                                <div className=\"line\"></div>\r\n                                                <form onSubmit={() => this.handleFormSubmitEdit(dEvent)} className=\"d-flex justify-content-center align-items-center flex-column\">\r\n                                                    <div className=\"div-input\">\r\n                                                        <span>Title&ensp;&ensp;: </span>\r\n                                                        <input type=\"text\" name=\"titleEdit\" placeholder=\"Title\" value={this.state.titleEdit} onChange={this.handleChange}/><br/>\r\n                                                    </div>\r\n                                                    <div className=\"div-input\">\r\n                                                        <span>Time&ensp;&ensp;: </span>\r\n                                                        <TimePicker\r\n                                                            showSecond={false}\r\n                                                            defaultValue={moment().hour(Number(dEvent.time[0].substr(0, 2))).minute(Number(dEvent.time[0].substr(3, 2)))}\r\n                                                            className=\"xxx\"\r\n                                                            onChange={this.changeStartTimeEdit}\r\n                                                            inputReadOnly\r\n                                                        />\r\n                                                        <span> to </span>\r\n                                                        <TimePicker\r\n                                                            showSecond={false}\r\n                                                            defaultValue={moment().hour(Number(dEvent.time[1].substr(0, 2))).minute(Number(dEvent.time[1].substr(3, 2)))}\r\n                                                            className=\"xxx\"\r\n                                                            onChange={this.changeEndTimeEdit}\r\n                                                            inputReadOnly\r\n                                                        />\r\n                                                        <br/>\r\n                                                    </div>\r\n                                                    <div className=\"div-input\">\r\n                                                        <span>Invite&ensp;: </span>\r\n                                                        <input type=\"text\" name=\"invitationEdit\" placeholder=\"Invite\" value={this.state.invitationEdit} onChange={this.handleChange}/><br/>\r\n                                                    </div>\r\n                                                    <button type=\"submit\" className=\"primaryButton\">Edit</button>\r\n                                                </form>\r\n                                            </div>\r\n                                        </Modal>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            return eventDay\r\n                        })}\r\n                        <div className=\"line\"></div>\r\n                        <div className=\"d-flex justify-content-center align-items-center flex-column\">\r\n                            <p className=\"titleModal\">Add Event</p>\r\n                            <form onSubmit={this.handleFormSubmit} className=\"d-flex justify-content-center align-items-center flex-column\">\r\n                                <div className=\"div-input\">\r\n                                    <span>Title&ensp;&ensp;: </span>\r\n                                    <input type=\"text\" name=\"title\" placeholder=\"Title\" value={title} onChange={this.handleChange}/><br/>\r\n                                </div>\r\n                                <div className=\"div-input\">\r\n                                    <span>Time&ensp;&ensp;: </span>\r\n                                    <TimePicker\r\n                                        showSecond={false}\r\n                                        defaultValue={now}\r\n                                        className=\"xxx\"\r\n                                        onChange={this.changeStartTime}\r\n                                    />\r\n                                    <span> to </span>\r\n                                    <TimePicker\r\n                                        showSecond={false}\r\n                                        defaultValue={now}\r\n                                        className=\"xxx\"\r\n                                        onChange={this.changeEndTime}\r\n                                    />\r\n                                    <br/>\r\n                                </div>\r\n                                <div className=\"div-input\">\r\n                                    <span>Invite&ensp;: </span>\r\n                                    <input type=\"text\" name=\"invitation\" placeholder=\"Invite\" value={invitation} onChange={this.handleChange}/><br/>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"primaryButton\" disabled={eventCount < 3 ? false : true}>Add</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Modal>  \r\n          </section>\r\n        )\r\n    }\r\n}","import React from 'react'\nimport './App.scss';\n\nimport Calendar from './components/Calendar'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n       <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}